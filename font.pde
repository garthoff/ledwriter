// 8-pixel width font

#include <avr/pgmspace.h>

PROGMEM byte chr20[3] = { 0x00, 0x00, 0x00 };
PROGMEM byte chr21[3] = { 0x00, 0x5F, 0x00 };
PROGMEM byte chr22[3] = { 0x07, 0x00, 0x07 };
PROGMEM byte chr23[5] = { 0x14, 0x7F, 0x14, 0x7F, 0x14 };
PROGMEM byte chr24[5] = { 0x26, 0x49, 0x7F, 0x49, 0x32 };
PROGMEM byte chr25[5] = { 0x63, 0x13, 0x08, 0x64, 0x63 };
PROGMEM byte chr26[5] = { 0x36, 0x49, 0x00, 0x22, 0x50 };
PROGMEM byte chr27[3] = { 0x04, 0x03, 0x00 };
PROGMEM byte chr28[3] = { 0x1C, 0x22, 0x41 };
PROGMEM byte chr29[3] = { 0x41, 0x22, 0x1C };
PROGMEM byte chr2A[5] = { 0x14, 0x2A, 0x1C, 0x2A, 0x14 };
PROGMEM byte chr2B[5] = { 0x08, 0x08, 0x3E, 0x08, 0x08 };
PROGMEM byte chr2C[2] = { 0x80, 0x60 };
PROGMEM byte chr2D[5] = { 0x08, 0x08, 0x08, 0x08, 0x08 };
PROGMEM byte chr2E[1] = { 0x40 };
PROGMEM byte chr2F[5] = { 0x60, 0x10, 0x08, 0x04, 0x03 };
PROGMEM byte chr30[5] = { 0x3E, 0x51, 0x49, 0x45, 0x3E };
PROGMEM byte chr31[5] = { 0x00, 0x42, 0x7F, 0x40, 0x00 };
PROGMEM byte chr32[5] = { 0x62, 0x51, 0x49, 0x49, 0x46 };
PROGMEM byte chr33[5] = { 0x22, 0x41, 0x49, 0x49, 0x36 };
PROGMEM byte chr34[5] = { 0x18, 0x14, 0x12, 0x7F, 0x10 };
PROGMEM byte chr35[5] = { 0x27, 0x49, 0x49, 0x49, 0x31 };
PROGMEM byte chr36[5] = { 0x3C, 0x4A, 0x49, 0x49, 0x30 };
PROGMEM byte chr37[5] = { 0x01, 0x71, 0x09, 0x05, 0x03 };
PROGMEM byte chr38[5] = { 0x36, 0x49, 0x49, 0x49, 0x36 };
PROGMEM byte chr39[5] = { 0x06, 0x49, 0x49, 0x29, 0x1E };
PROGMEM byte chr3A[1] = { 0x14 };
PROGMEM byte chr3B[2] = { 0x80, 0x68 };
PROGMEM byte chr3C[4] = { 0x08, 0x14, 0x22, 0x41 };
PROGMEM byte chr3D[4] = { 0x14, 0x14, 0x14, 0x14 };
PROGMEM byte chr3E[4] = { 0x41, 0x22, 0x14, 0x08 };
PROGMEM byte chr3F[5] = { 0x02, 0x01, 0x51, 0x09, 0x06 };
PROGMEM byte chr40[5] = { 0x3E, 0x41, 0x5D, 0x00, 0x4E };
PROGMEM byte chr41[5] = { 0x7C, 0x12, 0x11, 0x12, 0x7C };
PROGMEM byte chr42[5] = { 0x7F, 0x49, 0x49, 0x49, 0x36 };
PROGMEM byte chr43[5] = { 0x3E, 0x41, 0x41, 0x41, 0x22 };
PROGMEM byte chr44[5] = { 0x7F, 0x41, 0x41, 0x22, 0x1C };
PROGMEM byte chr45[5] = { 0x7F, 0x49, 0x49, 0x49, 0x41 };
PROGMEM byte chr46[5] = { 0x7F, 0x09, 0x09, 0x09, 0x01 };
PROGMEM byte chr47[5] = { 0x3E, 0x41, 0x49, 0x29, 0x72 };
PROGMEM byte chr48[5] = { 0x7F, 0x08, 0x08, 0x08, 0x7F };
PROGMEM byte chr49[3] = { 0x41, 0x7F, 0x41 };
PROGMEM byte chr4A[5] = { 0x20, 0x40, 0x41, 0x3F, 0x01 };
PROGMEM byte chr4B[5] = { 0x7F, 0x08, 0x14, 0x22, 0x41 };
PROGMEM byte chr4C[4] = { 0x7F, 0x40, 0x40, 0x40 };
PROGMEM byte chr4D[5] = { 0x7F, 0x02, 0x0C, 0x02, 0x7F };
PROGMEM byte chr4E[5] = { 0x7F, 0x06, 0x08, 0x30, 0x7F };
PROGMEM byte chr4F[5] = { 0x3E, 0x41, 0x41, 0x41, 0x3E };
PROGMEM byte chr50[5] = { 0x7F, 0x09, 0x09, 0x09, 0x06 };
PROGMEM byte chr51[5] = { 0x3E, 0x41, 0x51, 0x21, 0x5E };
PROGMEM byte chr52[5] = { 0x7F, 0x09, 0x19, 0x29, 0x46 };
PROGMEM byte chr53[5] = { 0x26, 0x49, 0x49, 0x49, 0x32 };
PROGMEM byte chr54[5] = { 0x01, 0x01, 0x7F, 0x01, 0x01 };
PROGMEM byte chr55[5] = { 0x3F, 0x40, 0x40, 0x40, 0x3F };
PROGMEM byte chr56[5] = { 0x0F, 0x30, 0x40, 0x30, 0x0F };
PROGMEM byte chr57[7] = { 0x0F, 0x30, 0x40, 0x38, 0x40, 0x30, 0x0F };
PROGMEM byte chr58[5] = { 0x63, 0x14, 0x08, 0x14, 0x63 };
PROGMEM byte chr59[5] = { 0x07, 0x08, 0x70, 0x08, 0x07 };
PROGMEM byte chr5A[5] = { 0x61, 0x51, 0x49, 0x45, 0x43 };
PROGMEM byte chr5B[3] = { 0x7F, 0x41, 0x41 };
PROGMEM byte chr5C[5] = { 0x03, 0x04, 0x08, 0x10, 0x60 };
PROGMEM byte chr5D[3] = { 0x41, 0x41, 0x7F };
PROGMEM byte chr5E[5] = { 0x08, 0x04, 0x02, 0x04, 0x08 };
PROGMEM byte chr5F[5] = { 0x40, 0x40, 0x40, 0x40, 0x40 };
PROGMEM byte chr60[3] = { 0x03, 0x04, 0x00 };
PROGMEM byte chr61[4] = { 0x20, 0x54, 0x54, 0x78 };
PROGMEM byte chr62[5] = { 0x7F, 0x28, 0x44, 0x44, 0x38 };
PROGMEM byte chr63[4] = { 0x38, 0x44, 0x44, 0x28 };
PROGMEM byte chr64[5] = { 0x38, 0x44, 0x44, 0x28, 0x7F };
PROGMEM byte chr65[4] = { 0x38, 0x54, 0x54, 0x48 };
PROGMEM byte chr66[4] = { 0x08, 0x7E, 0x09, 0x02 };
PROGMEM byte chr67[4] = { 0x98, 0xA4, 0xA4, 0x58 };
PROGMEM byte chr68[5] = { 0x7F, 0x08, 0x04, 0x04, 0x78 };
PROGMEM byte chr69[2] = { 0x3D, 0x40 };
PROGMEM byte chr6A[3] = { 0x80, 0x84, 0x7D };
PROGMEM byte chr6B[4] = { 0x7F, 0x10, 0x28, 0x44 };
PROGMEM byte chr6C[3] = { 0x01, 0x7F, 0x00 };
PROGMEM byte chr6D[6] = { 0x7C, 0x08, 0x04, 0x78, 0x04, 0x78 };
PROGMEM byte chr6E[5] = { 0x7C, 0x08, 0x04, 0x04, 0x78 };
PROGMEM byte chr6F[4] = { 0x38, 0x44, 0x44, 0x38 };
PROGMEM byte chr70[5] = { 0xFC, 0x18, 0x24, 0x24, 0x18 };
PROGMEM byte chr71[5] = { 0x18, 0x24, 0x24, 0x18, 0xFC };
PROGMEM byte chr72[5] = { 0x7C, 0x08, 0x04, 0x04, 0x08 };
PROGMEM byte chr73[4] = { 0x48, 0x54, 0x54, 0x24 };
PROGMEM byte chr74[3] = { 0x04, 0x3E, 0x44 };
PROGMEM byte chr75[5] = { 0x3C, 0x40, 0x40, 0x20, 0x7C };
PROGMEM byte chr76[5] = { 0x1C, 0x20, 0x40, 0x20, 0x1C };
PROGMEM byte chr77[5] = { 0x3C, 0x40, 0x30, 0x40, 0x3C };
PROGMEM byte chr78[5] = { 0x44, 0x28, 0x10, 0x28, 0x44 };
PROGMEM byte chr79[4] = { 0x1C, 0xA0, 0xA0, 0x7C };
PROGMEM byte chr7A[4] = { 0x64, 0x54, 0x54, 0x4C };
PROGMEM byte chr7B[3] = { 0x08, 0x36, 0x41 };
PROGMEM byte chr7C[3] = { 0x00, 0x7F, 0x00 };
PROGMEM byte chr7D[3] = { 0x41, 0x36, 0x08 };
PROGMEM byte chr7E[2] = { 0x00, 0x00 };
PROGMEM byte chr7F[1] = { 0 };
PROGMEM byte chr80[7] = { 0x1C, 0x22, 0x41, 0x4F, 0x41, 0x22, 0x1C };
PROGMEM byte chr81[7] = { 0x1C, 0x22, 0x41, 0x49, 0x45, 0x22, 0x1C };
PROGMEM byte chr82[7] = { 0x1C, 0x22, 0x41, 0x49, 0x49, 0x2A, 0x1C };
PROGMEM byte chr83[7] = { 0x1C, 0x22, 0x41, 0x49, 0x51, 0x22, 0x1C };
PROGMEM byte chr84[7] = { 0x1C, 0x22, 0x41, 0x79, 0x41, 0x22, 0x1C };
PROGMEM byte chr85[7] = { 0x1C, 0x22, 0x51, 0x49, 0x41, 0x22, 0x1C };
PROGMEM byte chr86[7] = { 0x1C, 0x2A, 0x49, 0x49, 0x41, 0x22, 0x1C };
PROGMEM byte chr87[7] = { 0x1C, 0x22, 0x45, 0x49, 0x41, 0x22, 0x1C };

#define NUM_CHARS 104
#define FIRST_CHAR 32

PROGMEM byte char_len[104] = { 3, 3, 3, 5, 5, 5, 5, 3, 3, 
                               3, 5, 5, 2, 5, 1, 5, 5, 5, 
                               5, 5, 5, 5, 5, 5, 5, 5, 1, 
                               2, 4, 4, 4, 5, 5, 5, 5, 5, 
                               5, 5, 5, 5, 5, 3, 5, 5, 4, 
                               5, 5, 5, 5, 5, 5, 5, 5, 5, 
                               5, 7, 5, 5, 5, 3, 5, 3, 5, 
                               5, 3, 4, 5, 4, 5, 4, 4, 4, 
                               5, 2, 3, 4, 3, 6, 5, 4, 5, 
                               5, 5, 4, 3, 5, 5, 5, 5, 4, 
                               4, 3, 3, 3, 2, 0, 7, 7, 7, 
                               7, 7, 7, 7, 7 };

PROGMEM byte *char_bmp[104] = { chr20, chr21, chr22, chr23, chr24, chr25, chr26, 
                                chr27, chr28, chr29, chr2A, chr2B, chr2C, chr2D, 
                                chr2E, chr2F, chr30, chr31, chr32, chr33, chr34, 
                                chr35, chr36, chr37, chr38, chr39, chr3A, chr3B, 
                                chr3C, chr3D, chr3E, chr3F, chr40, chr41, chr42, 
                                chr43, chr44, chr45, chr46, chr47, chr48, chr49, 
                                chr4A, chr4B, chr4C, chr4D, chr4E, chr4F, chr50, 
                                chr51, chr52, chr53, chr54, chr55, chr56, chr57, 
                                chr58, chr59, chr5A, chr5B, chr5C, chr5D, chr5E, 
                                chr5F, chr60, chr61, chr62, chr63, chr64, chr65, 
                                chr66, chr67, chr68, chr69, chr6A, chr6B, chr6C, 
                                chr6D, chr6E, chr6F, chr70, chr71, chr72, chr73, 
                                chr74, chr75, chr76, chr77, chr78, chr79, chr7A, 
                                chr7B, chr7C, chr7D, chr7E, chr7F, chr80, chr81, 
                                chr82, chr83, chr84, chr85, chr86, chr87 };


int font_char_len(char c)
{
  if (c >= FIRST_CHAR && c < FIRST_CHAR + NUM_CHARS)
    return pgm_read_byte(&char_len[c - FIRST_CHAR]);
  return 0;
}

int font_char_row(char c, int row)
{
  byte *rows;
  if (row < font_char_len(c)) {
    rows = (byte *) pgm_read_word(&char_bmp[c - FIRST_CHAR]);
    return pgm_read_byte(&rows[row]);
  }
  return 0;
}

